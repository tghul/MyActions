# This is a basic workflow to help you get started with Actions

name: Tar esp32cam repo

permissions:
  contents: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #   tags:
  #     - "esp32cam*"
    # branches: [ "master" ]
    # paths:   # 这里是用来指定哪个文件更改，才会触发的
    #   - '.github/workflows/tar-esp32cam-repo.yml'
#   pull_request:
#     branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tar-esp32cam-repo:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v3

      - name: Git clone and tar
        run: |
          git clone --recurse-submodules https://github.com/Ai-Thinker-Open/Ai-Thinker-Open_ESP32-CAMERA_LAN.git
          zip -9 -r Ai-Thinker-Open_ESP32-CAMERA_LAN Ai-Thinker-Open_ESP32-CAMERA_LAN

      # - uses: actions/upload-artifact@v3.1.2
      #   with:
      #     name: Ai-Thinker-Open_ESP32-CAMERA_LAN.zip
      #     path: Ai-Thinker-Open_ESP32-CAMERA_LAN.zip
      - name: Get current date
        id: date
        # run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
        run: echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Tar Ai-Thinker-Open_ESP32-CAMERA_LAN repo   
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with: 
          tag_name: esp32cam-${{ steps.date.outputs.date }}
          files: Ai-Thinker-Open_ESP32-CAMERA_LAN.zip
